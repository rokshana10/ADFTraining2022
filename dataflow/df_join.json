{
	"name": "df_join",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Movies_DSI",
						"type": "DatasetReference"
					},
					"name": "Movies"
				},
				{
					"dataset": {
						"referenceName": "Movies_DSI",
						"type": "DatasetReference"
					},
					"name": "MoviesDB"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "MoviesOpCSV",
						"type": "DatasetReference"
					},
					"name": "MoviesOp"
				}
			],
			"transformations": [
				{
					"name": "MoviesClean"
				},
				{
					"name": "joinMovies"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          movieId as string,",
				"          title as string,",
				"          genres as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Movies",
				"source(output(",
				"          movieId as string,",
				"          title as string,",
				"          genres as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> MoviesDB",
				"Movies derive(titleNew = toString(left(title,length(title)-6))) ~> MoviesClean",
				"MoviesClean, MoviesDB join(Movies@title == MoviesDB@title,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinMovies",
				"joinMovies select(mapColumn(",
				"          movieId = Movies@movieId,",
				"          title = Movies@title,",
				"          genres = Movies@genres,",
				"          titleNew,",
				"          movieId = MoviesDB@movieId,",
				"          title = MoviesDB@title,",
				"          genres = MoviesDB@genres",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Column_1 as string,",
				"          Column_2 as string,",
				"          Column_3 as string,",
				"          Column_4 as string,",
				"          Column_5 as string,",
				"          Column_6 as string",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> MoviesOp"
			]
		}
	}
}